
state 0:

	program : . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 8
	program	goto 133
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 1:

	exp : record .  (reduce by rule 53)



	.	reduce by rule 53


state 2:

	exp : funcall .  (reduce by rule 49)



	.	reduce by rule 49


state 3:

	exp : logical .  (reduce by rule 52)



	.	reduce by rule 52


state 4:

	exp : comparison .  (reduce by rule 51)



	.	reduce by rule 51


state 5:

	exp : arithmetic .  (reduce by rule 50)



	.	reduce by rule 50


state 6:

	exp : sequence .  (reduce by rule 44)



	.	reduce by rule 44


state 7:

	exp : lvalue .  (reduce by rule 42)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 21
	DOT	shift 20
	ASSIGN	shift 19


	.	reduce by rule 42


state 8:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 0


state 9:

	exp : NIL .  (reduce by rule 43)



	.	reduce by rule 43


state 10:

	exp : LET . decs IN multiExp END 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 38
	dec	goto 37
	tydec	goto 36
	vardec	goto 35
	fundec	goto 34

	.	error


state 11:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 42


	.	error


state 12:

	exp : WHILE . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 43
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 13:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 44
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 14:

	exp : MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 45
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 15:

	exp : LBRACE . RBRACE 
	sequence : LBRACE . multiExp RBRACE 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	RBRACE	shift 48
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 47
	lvalue	goto 7
	sequence	goto 6
	multiExp	goto 46
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 16:

	exp : STRING .  (reduce by rule 47)



	.	reduce by rule 47


state 17:

	exp : INT .  (reduce by rule 46)



	.	reduce by rule 46


state 18:

	lvalue : ID .  (reduce by rule 16)
	funcall : ID . LBRACE RBRACE 
	funcall : ID . LBRACE mExp RBRACE 
	record : ID . LPAREN items RPAREN 

	LPAREN	shift 50
	LBRACE	shift 49


	.	reduce by rule 16


state 19:

	exp : lvalue ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 51
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 20:

	lvalue : lvalue DOT . ID 

	ID	shift 52


	.	error


state 21:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 53
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 22:

	logical : exp OR . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 54
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 23:

	logical : exp AND . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 55
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 24:

	comparison : exp GE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 56
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 25:

	comparison : exp GT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 57
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 26:

	comparison : exp LE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 58
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 27:

	comparison : exp LT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 59
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 28:

	comparison : exp NEQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 60
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 29:

	comparison : exp EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 61
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 30:

	arithmetic : exp DIVIDE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 62
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 31:

	arithmetic : exp TIMES . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 63
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 32:

	arithmetic : exp MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 64
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 33:

	arithmetic : exp PLUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 65
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 34:

	dec : fundec .  (reduce by rule 4)



	.	reduce by rule 4


state 35:

	dec : vardec .  (reduce by rule 3)



	.	reduce by rule 3


state 36:

	dec : tydec .  (reduce by rule 2)



	.	reduce by rule 2


state 37:

	decs : dec . decs 

	FUNCTION	shift 41
	VAR	shift 40
	TYPE	shift 39

	decs	goto 66
	dec	goto 37
	tydec	goto 36
	vardec	goto 35
	fundec	goto 34

	.	error


state 38:

	exp : LET decs . IN multiExp END 

	IN	shift 67


	.	error


state 39:

	tydec : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 40:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 41:

	fundec : FUNCTION . ID LBRACE tyfields RBRACE EQ exp 
	fundec : FUNCTION . ID LBRACE tyfields RBRACE COLON ID EQ exp 

	ID	shift 70


	.	error


state 42:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 71


	.	error


state 43:

	exp : WHILE exp . DO exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22
	DO	shift 72


	.	error


state 44:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22
	THEN	shift 73


	.	error


state 45:

	exp : MINUS exp .  (reduce by rule 48)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 48


state 46:

	sequence : LBRACE multiExp . RBRACE 

	RBRACE	shift 74


	.	error


state 47:

	multiExp : exp .  (reduce by rule 20)
	multiExp : exp . SEMICOLON multiExp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	SEMICOLON	shift 75
	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 20


state 48:

	exp : LBRACE RBRACE .  (reduce by rule 45)



	.	reduce by rule 45


state 49:

	funcall : ID LBRACE . RBRACE 
	funcall : ID LBRACE . mExp RBRACE 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	RBRACE	shift 78
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 77
	lvalue	goto 7
	sequence	goto 6
	mExp	goto 76
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 50:

	record : ID LPAREN . items RPAREN 

	ID	shift 81

	items	goto 80
	item	goto 79

	.	error


state 51:

	exp : lvalue ASSIGN exp .  (reduce by rule 54)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 54


state 52:

	lvalue : lvalue DOT ID .  (reduce by rule 17)



	.	reduce by rule 17


state 53:

	lvalue : lvalue LBRACK exp . RBRACK 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	RBRACK	shift 82
	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	error


state 54:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 
	logical : exp OR exp .  (reduce by rule 39)

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23


	.	reduce by rule 39


state 55:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp AND exp .  (reduce by rule 38)
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24


	.	reduce by rule 38


state 56:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 34)
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 34


state 57:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 35)
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 35


state 58:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 36)
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 36


state 59:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 37)
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 37


state 60:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 33)
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 33


state 61:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 32)
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 32


state 62:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 29)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 



	.	reduce by rule 29


state 63:

	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 28)
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 



	.	reduce by rule 28


state 64:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 31)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 31


state 65:

	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 30)
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	TIMES	shift 31
	DIVIDE	shift 30


	.	reduce by rule 30


state 66:

	decs : dec decs .  (reduce by rule 1)



	.	reduce by rule 1


state 67:

	exp : LET decs IN . multiExp END 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 47
	lvalue	goto 7
	sequence	goto 6
	multiExp	goto 83
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 68:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 69:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 70:

	fundec : FUNCTION ID . LBRACE tyfields RBRACE EQ exp 
	fundec : FUNCTION ID . LBRACE tyfields RBRACE COLON ID EQ exp 

	LBRACE	shift 87


	.	error


state 71:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 88
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 72:

	exp : WHILE exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 89
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 73:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 90
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 74:

	sequence : LBRACE multiExp RBRACE .  (reduce by rule 19)



	.	reduce by rule 19


state 75:

	multiExp : exp SEMICOLON . multiExp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 47
	lvalue	goto 7
	sequence	goto 6
	multiExp	goto 91
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 76:

	funcall : ID LBRACE mExp . RBRACE 

	RBRACE	shift 92


	.	error


state 77:

	mExp : exp .  (reduce by rule 22)
	mExp : exp . COMMA mExp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	COMMA	shift 93
	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 22


state 78:

	funcall : ID LBRACE RBRACE .  (reduce by rule 40)



	.	reduce by rule 40


state 79:

	items : item .  (reduce by rule 24)
	items : item . COMMA items 

	COMMA	shift 94


	.	reduce by rule 24


state 80:

	record : ID LPAREN items . RPAREN 

	RPAREN	shift 95


	.	error


state 81:

	item : ID . EQ exp 

	EQ	shift 96


	.	error


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 18)



	.	reduce by rule 18


state 83:

	exp : LET decs IN multiExp . END 

	END	shift 97


	.	error


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 101
	LPAREN	shift 100
	ARRAY	shift 99

	ty	goto 98

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 102
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 87:

	fundec : FUNCTION ID LBRACE . tyfields RBRACE EQ exp 
	fundec : FUNCTION ID LBRACE . tyfields RBRACE COLON ID EQ exp 

	ID	shift 106

	tyfields	goto 105
	tyfield	goto 104

	.	error


state 88:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22
	TO	shift 107


	.	error


state 89:

	exp : WHILE exp DO exp .  (reduce by rule 57)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 57


state 90:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 56)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 56


state 91:

	multiExp : exp SEMICOLON multiExp .  (reduce by rule 21)



	.	reduce by rule 21


state 92:

	funcall : ID LBRACE mExp RBRACE .  (reduce by rule 41)



	.	reduce by rule 41


state 93:

	mExp : exp COMMA . mExp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 77
	lvalue	goto 7
	sequence	goto 6
	mExp	goto 109
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 94:

	items : item COMMA . items 

	ID	shift 81

	items	goto 110
	item	goto 79

	.	error


state 95:

	record : ID LPAREN items RPAREN .  (reduce by rule 27)



	.	reduce by rule 27


state 96:

	item : ID EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 111
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 97:

	exp : LET decs IN multiExp END .  (reduce by rule 59)



	.	reduce by rule 59


state 98:

	tydec : TYPE ID EQ ty .  (reduce by rule 5)



	.	reduce by rule 5


state 99:

	ty : ARRAY . OF ID 

	OF	shift 112


	.	error


state 100:

	ty : LPAREN . tyfields RPAREN 

	ID	shift 106

	tyfields	goto 113
	tyfield	goto 104

	.	error


state 101:

	ty : ID .  (reduce by rule 6)



	.	reduce by rule 6


state 102:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 12)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 12


state 103:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 114


	.	error


state 104:

	tyfields : tyfield .  (reduce by rule 9)
	tyfields : tyfield . COMMA tyfields 

	COMMA	shift 115


	.	reduce by rule 9


state 105:

	fundec : FUNCTION ID LBRACE tyfields . RBRACE EQ exp 
	fundec : FUNCTION ID LBRACE tyfields . RBRACE COLON ID EQ exp 

	RBRACE	shift 116


	.	error


state 106:

	tyfield : ID . SEMICOLON ID 

	SEMICOLON	shift 117


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 118
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 119
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 109:

	mExp : exp COMMA mExp .  (reduce by rule 23)



	.	reduce by rule 23


state 110:

	items : item COMMA items .  (reduce by rule 25)



	.	reduce by rule 25


state 111:

	item : ID EQ exp .  (reduce by rule 26)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 26


state 112:

	ty : ARRAY OF . ID 

	ID	shift 120


	.	error


state 113:

	ty : LPAREN tyfields . RPAREN 

	RPAREN	shift 121


	.	error


state 114:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 122
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 115:

	tyfields : tyfield COMMA . tyfields 

	ID	shift 106

	tyfields	goto 123
	tyfield	goto 104

	.	error


state 116:

	fundec : FUNCTION ID LBRACE tyfields RBRACE . EQ exp 
	fundec : FUNCTION ID LBRACE tyfields RBRACE . COLON ID EQ exp 

	COLON	shift 125
	EQ	shift 124


	.	error


state 117:

	tyfield : ID SEMICOLON . ID 

	ID	shift 126


	.	error


state 118:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22
	DO	shift 127


	.	error


state 119:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 55)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 55


state 120:

	ty : ARRAY OF ID .  (reduce by rule 8)



	.	reduce by rule 8


state 121:

	ty : LPAREN tyfields RPAREN .  (reduce by rule 7)



	.	reduce by rule 7


state 122:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 13)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 13


state 123:

	tyfields : tyfield COMMA tyfields .  (reduce by rule 10)



	.	reduce by rule 10


state 124:

	fundec : FUNCTION ID LBRACE tyfields RBRACE EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 128
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 125:

	fundec : FUNCTION ID LBRACE tyfields RBRACE COLON . ID EQ exp 

	ID	shift 129


	.	error


state 126:

	tyfield : ID SEMICOLON ID .  (reduce by rule 11)



	.	reduce by rule 11


state 127:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 130
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 128:

	fundec : FUNCTION ID LBRACE tyfields RBRACE EQ exp .  (reduce by rule 14)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 14


state 129:

	fundec : FUNCTION ID LBRACE tyfields RBRACE COLON ID . EQ exp 

	EQ	shift 131


	.	error


state 130:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 58)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 58


state 131:

	fundec : FUNCTION ID LBRACE tyfields RBRACE COLON ID EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LBRACE	shift 15
	MINUS	shift 14
	IF	shift 13
	WHILE	shift 12
	FOR	shift 11
	LET	shift 10
	NIL	shift 9

	exp	goto 132
	lvalue	goto 7
	sequence	goto 6
	arithmetic	goto 5
	comparison	goto 4
	logical	goto 3
	funcall	goto 2
	record	goto 1

	.	error


state 132:

	fundec : FUNCTION ID LBRACE tyfields RBRACE COLON ID EQ exp .  (reduce by rule 15)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GE exp 
	comparison : exp . GT exp 
	comparison : exp . LE exp 
	comparison : exp . LT exp 
	logical : exp . AND exp 
	logical : exp . OR exp 

	PLUS	shift 33
	MINUS	shift 32
	TIMES	shift 31
	DIVIDE	shift 30
	EQ	shift 29
	NEQ	shift 28
	LT	shift 27
	LE	shift 26
	GT	shift 25
	GE	shift 24
	AND	shift 23
	OR	shift 22


	.	reduce by rule 15


state 133:


	EOF	accept


	.	error

350 of 800 action table entries left after compaction
299 goto table entries
